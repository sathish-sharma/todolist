<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ToDoList</title>
  <link rel="stylesheet" href="css/style.css" />
</head>
<body>
  <div id="heading" class="box">
    <h1>ToDoList</h1>
    <% if (alert) { %>
      <div class="alert <%= alert %>">
        <%= alert === "added" ? "Task added successfully." : 
            alert === "updated" ? "Task updated successfully." :
            alert === "deleted" ? "Task deleted successfully." :
            alert === "empty" ? "Task cannot be empty." : "" %>
        <button onclick="this.parentElement.style.display='none'">X</button>
      </div>
    <% } %>
  </div>

  <div class="box">

    <% for (var i = 0; i < ejes.length; i++) { %>
      <div class="item" id="task-<%= i %>">
        <input type="checkbox" onclick="deleteTask('<%= ejes[i] %>')" />
        <p class="task-text"><%= ejes[i] %></p>
        <input class="edit-input" type="text" value="<%= ejes[i] %>" />
        <button class="edit-btn" onclick="enableEdit('<%= i %>')">Edit</button>
        <button class="save-btn" onclick="saveEdit('<%= i %>', '<%= ejes[i] %>')">Save</button>
      </div>
    <% } %>

    <form onsubmit="addTask(event)">
      <input type="text" name="ele1" placeholder="Enter the task" required />
      <button type="submit">Add</button>
    </form>
  </div>

  <script>
    function addTask(event) {
      event.preventDefault();
      const ele1 = document.querySelector('input[name=ele1]').value.trim();
      if (!ele1) {
        alert("Task cannot be empty.");
        return;
      }
      fetch("/", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ ele1 })
      }).then(res => res.json())
      .then(data => {
        if (data.success) location.reload();
        else alert("Failed to add task.");
      });
    }

    function deleteTask(task) {
      fetch("/delete", {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ task })
      }).then(res => {
        if (res.ok) location.reload();
        else alert("Failed to delete task.");
      });
    }

    function enableEdit(index) {
      const container = document.getElementById(`task-${index}`);
      const taskText = container.querySelector('.task-text');
      const editInput = container.querySelector('.edit-input');
      const editBtn = container.querySelector('.edit-btn');
      const saveBtn = container.querySelector('.save-btn');
      taskText.style.display = 'none';
      editInput.style.display = 'inline-block';
      editBtn.style.display = 'none';
      saveBtn.style.display = 'inline-block';

    }

    function saveEdit(index, oldTask) {
      const container = document.getElementById(`task-${index}`);
      const newTask = container.querySelector('.edit-input').value.trim();
      const taskText = container.querySelector('.task-text');
      const editBtn = container.querySelector('.edit-btn');
      const saveBtn = container.querySelector('.save-btn');
      taskText.style.display = 'inline-block';
      editBtn.style.display = 'inline-block';
      saveBtn.style.display = 'none';
      if (!newTask) {
        alert("Task cannot be empty.");
        return;
      }
      fetch('/edit', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ oldTask, newTask })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) location.reload();
        else alert("Failed to update task.");
      });
    }
  </script>
</body>
</html>